This will be a representation of what a class collection in Piazza might look like in MongoDB
[
    {
        _id: ObjectID(),
        class_name: "Intro To Programming",
        class_num: "CSC108", 
        estimated_class_enroll": 200, 
        class_term: "FALL2020",
        folders: ["midterm", "A1", "A2", "A3", "exam", "general"],
        instructors: ["ta1@utoronto.ca","ta2@utoronto.ca", "prof1@utoronto.ca"],
        students: ["ak@utoronto.ca", "abij@utoronto.ca", "kandice@utoronto.ca"],
        posts_num: 2,
        posts: [
            {
                index: 1,
                category: "question",
                post_to: "entire_class",
                folders: "midterm",
                summary: "Why was the midterm so hard?",
                details: "I was stuck on q3 for most of the test and I didn't even have enough time to finish
                        the whole thing",
                follow-ups: ["Yeah Q3 was REALLY hard!", "Nah it wasnt that bad"],
                replies: ["Yeah It was pretty bad", "I thought I made the test easier than past offerrings. We will mark easy dont worry!"]
            },
            ...
        ]
    },
    ...
]

This will be a representation of what user collection in Piazza might look like in MongoDB
[
    {
        _id: ObjectID()
        category: "instructor",
        school_name: "UofT",
        courses: [ObjectID(), ...],
        name: "John Rose"
        email: "ta1@utoronto.ca",
        password: "Ilove"
    },
    {
        _id: ObjectID()
        category: "student",
        school_name: "UofT",
        courses: [ObjectID(), ...],
        name: "Kandice Dog",
        email: "kandice@utoronto.ca",
        password: "password"
    },
]

The workflow is something like:
Models (a schema for what the data should look like)
Databases (database manipulation related to that specific collection)
Routes import Models and Databases to combine everything
App contains all the routes 